---
title: Kvalitet
format:
    html:
        css: tldr.css
        toc-location: body
---

## [MÅ]{.must} beholde omfattende dekning av kode med enhetstester.
## [MÅ]{.must} iverksette ["Four Eyes" prinsippet](https://www.openriskmanual.org/wiki/Four_Eyes_Principle) gjennom kodegjennomgang og/eller parprogrammering.
## [MÅ]{.must} ha på plass prosesser for å fange opp brukerbehov og eventuelle feil som påvirker sluttbrukere.
## [BØR]{.should} dekke viktige brukerflyt med ende-til-ende tester.
## [BØR]{.should} kjøre tester og kvalitetsverktøy så tidlig som mulig i utviklingsprosessen.

Også kjent som ["Shift Left" prinsippet](https://www.ibm.com/topics/shift-left-testing), dette fanger opp så mange potensielle bugs som mulig tidlig, hvor de er lettere å fikse.

Eksempler av dette er:

- Verktøy som kjører direkte i IDEen.
- Verktøy kjørende i "pre-commit hooks" som kjører når man først commiter kode.
- Verktøy som kjører når man først pusher kode til et repo.

## [BØR]{.should} anvende kodeformatteringsverktøy slik at kodebaser er formatert jevnt.

Ideelt sett skal disse kjøres automatisk.

Eksempler av kodeformatteringsverktøy er:

- [EditorConfig](https://editorconfig.org/)
- [Prettier](https://prettier.io/docs/en/) (for Javascript bl.a.)
- [Black](https://pypi.org/project/black/) (for Python)
- [`terraform fmt`](https://developer.hashicorp.com/terraform/cli/commands/fmt) (for Terraform)

## [BØR]{.should} anvende statiskkodeanalyseverktøy ("Lint"-verktøy).
