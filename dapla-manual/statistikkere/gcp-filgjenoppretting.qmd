---
toc-depth: 6
---

# GCS fil gjenoppretting

Det er to måter å gjenopprette slettede filer på Google Cloud Storage.

Hvis object-versjonering er aktivert og brukeren sletter en fil, endres tilstanden fra **live** til **noncurrent**. Det kan være flere noncurrent versjoner av en fil. Brukeren kan liste opp og gjenopprette inoncurrent versjoner.

Hvis objekt versjonering ikke er aktivert på bøtten din, er soft-delete aktivert som standard på bøtten

Funksjonen soft-delete gir standard beskyttelse på bøttenivå for dataene dine mot sletting eller overskrevne objekter i en spesifisert tidsperiode.Hvis du overskriver eller endrer dataene til et objekt, sletter Cloud Storage den tidligere versjonen og erstatter den med en ny. Soft-delete beholder alle disse slettede objektene, enten fra en slettekommando eller på grunn av en overskriving for den konfigurerte retention periode.

I soft-delete endres tilstanden fra **live** til **soft-deleted**.

@fig-versions viser oversikt over hvordan versjonsstyring fungerer. 

![Bilde som viser oversikt over hvordan versjonsstyring fungerer.](../images/gcs-file-deletion-listing.png){ fig-alt="viser oversikt over hvordan versjonsstyring fungerer" #fig-versions}

**Retention policy**

I objektversjonering har vi lifecycle policy for produkt- og kildebøtter. Den håndteres ved å bruke **days_since_noncurrent_time** og **num_newer_versions**.

Eksempel: For **produktbøtte** har vi **days_since_noncurrent_time = 180** og **num_newer_versions = 2**. Dette innebærer, slett objekter i bøtte hvis den ikke er aktuell i mer enn **180** dager eller hvis fil/objekt har **2 nyere versjoner** til stede i bøtta.

**Soft-deleted** gir beskyttelse på bøttenivå mot sletting ved å beholde nylig slettede objekter i en **retention periode** – **7 dager** som standard, som kan økes til 90 dager. Ler mer [her](https://cloud.google.com/storage/docs/soft-delete). 


## Live, Noncurrent and Soft-deleted versjoner

**Live version** Er den siste versjonen av filen som er i bøtte.

@fig-live-versions viser liste over live-versjoner av filer. 

![Bilde som viser liste over live-versjoner av filer.](../images/gcs-live-objects.png){ fig-alt="Bilde som viser liste over live-versjoner av filer" #fig-live-versions}

**Noncurrent version** opprettes når en fil er slettet eller den er overskrevet. Etter sletting, filen vises som non-current fil.

Når brukeren overskriver en fil i bøtte, blir den eksisterende filen noncurrent versjon og den siste filen skal være den live versjonen.

@fig-noncurrent-versions viser liste over noncurrent filer. 

![Bilde som viser liste over noncurrent filer.](../images/gcs-noncurrent-objects.png){ fig-alt="viser liste over noncurrent versjoner av filer." #fig-noncurrent-versions}


**Generation number** Identifiserer versjonen av et objekt, og eksisterer for hvert objekt, uavhengig av om en bøtte bruker objekt versjonering.

En objektversjons generasjonsnummer endres aldri. Et nytt objekt med samme navn kan erstatte et eksisterende objekt, men det nye objektet har alltid en nye generasjon tilordnet seg.

Generationsnummer brukes ved **listing**, **accessing**, **gjenoppretting** og **sletting** **noncurrent objektversjoner**: Noncurrent objektversjoner er spesifikt relevante i buckets som bruker eller tidligere brukt Object Versioning.

@fig-noncurrent-live-versions viser noncurrent og live versjon med generation nummeret. 


![Bilde som viser generation nummer.](../images/gcs-live-and-noncurrent.png){ fig-alt="viser generation nummer av filer." #fig-noncurrent-live-versions}

[dapla-toolbelt](https://github.com/statisticsnorway/dapla-toolbelt) støtter opplisting av live og noncurrent fil(er) via Jupyter Notebooks

Les mer om Objekt Versjonering [her](https://cloud.google.com/storage/docs/object-versioning#example).

## Liste filer med versjonshistorikk

### List alle filene i en mappe 

Kode snippet returnerer en liste over alle filene fra mappen **restore** fra en bøtte **ssb-dapla-felles-data-produkt-prod**. Generasjonsnummer vises i listen for hver fil.

Dette resulterer i en liste over slettede filer. Hvis objektversjon er aktivert, vider den alle noncurrent og live versjoner. Hvis objektversjon ikke er aktivert, resulterer i listen over soft-deleted versjoner av filer.

```{.python filename="notebook"}
import dapla as dapla
from dapla import FileClient

# Set bucket name and folder name(if any)
bucket = "ssb-dapla-felles-data-produkt-prod" 
folder = "restore"

FileClient.get_versions(bucket, folder)
```
**Output**
```
[<Blob: ssb-dapla-felles-data-produkt-prod, restore/data1.parquet, 1717762669778835>,
 <Blob: ssb-dapla-felles-data-produkt-prod, restore/data1.parquet, 1718015249969499>,
 <Blob: ssb-dapla-felles-data-produkt-prod, restore/data2.parquet, 1717762673242818>,
 <Blob: ssb-dapla-felles-data-produkt-prod, restore/data3.parquet, 1717762677832930>]
```
### List opp alle versjonene av en fil fra en mappe

Kode returnerer en liste over alle versjonene av en fil.

```{.python filename="notebook"}
import dapla as dapla
from dapla import FileClient

# Set bucket name and folder name(if any)
bucket = "ssb-dapla-felles-data-produkt-prod"
file_path = "restore/data1.parquet"

FileClient.get_versions(bucket, file_path)
```
**Output**
````
[<Blob: ssb-dapla-felles-data-produkt-prod, restore/data1.parquet, 1717762669778835>,
 <Blob: ssb-dapla-felles-data-produkt-prod, restore/data1.parquet, 1718015249969499>]
````

## Fil gjenoppretting

Å gjenopprette en noncurrent objektversjon betyr å opprette en kopi av den. Når du gjør det, blir kopien en live versjon, og gjenoppretter versjonen. Hvis det allerede er en live-versjon og bøtten har Object Versioning aktivert, gjenoppretting av den noncurrent versjonen føre til at den eksisterende live-versjonen blir noncurrent.

For å gjenopprette en fil, må brukeren sjekke hvilke noncurrent versjoner som eksisterer med siste oppdateringsdato osv.

```{.python filename="notebook"}
files = FileClient.get_versions("ssb-dapla-felles-data-produkt-prod", "restore/data1.parquet")

for file in files:
    print("Name          : ",file.name)
    print("Generation Id : ", file.generation)
    print("Updated on    : ", file.updated)
    print("Deleted on    : ", file.time_deleted)
    print("------------------------------------------")
```
**Output**
````
Name          :  restore/data1.parquet                
Generation Id :  1717762669778835
Updated on    :  2024-06-07 12:17:49.781000+00:00
Deleted on    :  2024-06-07 12:56:57.586000+00:00  
------------------------------------------
Name          :  restore/data1.parquet
Generation Id :  1718015249969499
Updated on    :  2024-06-10 10:27:29.972000+00:00
Deleted on    :  2024-06-10 10:30:26.821000+00:00
------------------------------------------
Name          :  restore/data1.parquet 
Generation Id :  1718402945003656
Updated on    :  2024-06-14 22:09:05.005000+00:00
Deleted on    :  None ----> (Live versjon))
------------------------------------------
````
Utdata viser at det er 3 versjoner for fil "data1.parquet". 
**Live-versjonen** har felt **file.time_deleted** er **None**

Den siste file er live-versjonen, og de to andre er noncurrent. 

Brukeren kan gjenopprette hvilken som helst av disse noncurrent som liveversjon.

Files which are soft deleted dont have **deleted_on** fields. In this case, check the updated_on field to see the last update data and time. And restore using the generation number.

### Hvordan gjenopprette en fil

**Syntax**

```{.python filename="notebook"}
import dapla as dapla
from dapla import FileClient

# bucket_name                  : Bøtte hvor filen som skal gjenopprettes 
#                                eksisterer.
# source_file_name             : Path til filen som skal gjenopprettes
# source_generation_id         : Generasjon nummeret til den noncurrent/soft_deleted 
#                                versjonen som skal gjenopprettes    
#(optional params)
# new_name                     : Ny navn til fil som skal gjenopprettes
#
#ikke tillatt å endre endring i soft_delete versjon gjenoppretting

 FileClient.restore_version(source_bucket_name="ssb-dapla-kildomaten-data-delt-test",
                            source_file_name="restore/data3.parquet",
                            source_generation_id=1718746518862276
                           )
 ```


### Example 

**Gjenoppretter en slettet fil**

Når du må gjenopprette en fil som har blitt slettet tidligere, betyr det at filen vil vises i listen over noncurrent versjoner. 

Example: 
```{.python filename="notebook"}
files = FileClient.get_versions("ssb-dapla-felles-data-produkt-prod", "restore/data1.parquet")

for file in files:
    print("Name          : ",file.name)
    print("Generation Id : ", file.generation)
    print("Updated on    : ", file.updated)
    print("Deleted on    : ", file.time_deleted)
    print("------------------------------------------")
```
```
Name          :  restore/data1.parquet
Generation Id :  1718015249969499
Updated on    :  2024-06-10 10:27:29.972000+00:00
Deleted on    :  2024-06-10 10:30:26.821000+00:00
------------------------------------------
Name          :  restore/data1.parquet
Generation Id :  1718402945003656
Updated on    :  2024-06-14 22:09:05.005000+00:00
Deleted on    :  2024-06-15 06:57:16.053000+00:00
```
Dette viser at filen data1.parquet ikke har noen live-versjoner. Det er to noncurrent versjoner. Du kan gjenopprette hvilken som helst av disse.

```{.python filename="notebook"}
import dapla as dapla
from dapla import FileClient

FileClient.restore_version(source_bucket_name= "ssb-dapla-felles-data-produkt-prod",
                           source_file_name= "restore/data1.parquet",
                           source_generation_id=1718402945003656)
 ```
Etter at du har kjørt restore_version(), sjekk versjonslisten for data1.parquet via

```
 Name          :  restore/data1.parquet
Generation Id :  1718015249969499
Updated on    :  2024-06-10 10:27:29.972000+00:00
Deleted on    :  2024-06-10 10:30:26.821000+00:00
------------------------------------------
Name          :  restore/data1.parquet
Generation Id :  1718402945003656 // Restore this noncurrent version
Updated on    :  2024-06-14 22:09:05.005000+00:00
Deleted on    :  2024-06-15 06:57:16.053000+00:00
------------------------------------------
Name          :  restore/data1.parquet
Generation Id :  1718435761616782
Updated on    :  2024-06-15 07:16:01.618000+00:00
Deleted on    :  None   ----> (Live versjon)
------------------------------------------
```
 Her kan du se at det nå er én live versjon tilgjengelig.

**Gjenoppretter noncurrent versjon, når det allerede er en live-versjon tilgjengelig**

Ovenfor utgangsvisninger er det 2 noncurrent versjoner og en live-versjon tilgjengelig for filen "data1.parquet". Slik gjenoppretter du noncurrent versjoner:

```{.python filename="notebook"}
import dapla as dapla
from dapla import FileClient

FileClient.restore_version(source_bucket_name= "ssb-dapla-felles-data-produkt-prod",
                           source_file_name= "restore/data1.parquet",
                           source_generation_id=1718015249969499)
 ```

 Now the pre-existing live version will become noncurrent. 

 ````
Name          :  restore/data1.parquet
Generation Id :  1718015249969499
Updated on    :  2024-06-10 10:27:29.972000+00:00
Deleted on    :  2024-06-10 10:30:26.821000+00:00
------------------------------------------
Name          :  restore/data1.parquet
Generation Id :  1718402945003656
Updated on    :  2024-06-14 22:09:05.005000+00:00
Deleted on    :  2024-06-15 06:57:16.053000+00:00
------------------------------------------
Name          :  restore/data1.parquet
Generation Id :  1718435761616782
Updated on    :  2024-06-15 07:16:01.618000+00:00
Deleted on    :  2024-06-15 07:25:04.928000+00:00
------------------------------------------
Name          :  restore/data1.parquet
Generation Id :  1718436304922143
Updated on    :  2024-06-15 07:25:04.928000+00:00
Deleted on    :  None
------------------------------------------
````