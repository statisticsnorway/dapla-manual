---
title: dapla-toolbelt-metadata
date-modified: "01/31/2025"
---

[dapla-toolbelt-metadata](https://pypi.org/project/dapla-toolbelt-metadata/) er en Python-pakke for å jobbe med metadatasystemene på Dapla. Pakken gir brukeren et Python-grensesnitt for å jobbe mot [Datadoc](./datadoc.qmd) og [Vardef](./vardef.qmd).

## Forberedelser

Før man tar i bruk *dapla-toolbelt-metadata* bør man ha lest [kapitlet om Dapla Lab](./dapla-lab.html) og satt opp Git- og GitHub-konfigurasjonen under **Min konto**. Deretter gjør du følgende:

1. Logg deg inn på [Dapla Lab](https://lab.dapla.ssb.no/)
2. Under **Tjenestekatalog** trykker du på **Start**-knappen for enten [Jupyter](./jupyter.qmd) eller [vscode-python](./vscode-python.qmd).
3. Gi tjenesten et navn.
4. Åpne **Jupyter konfigurasjoner**
5. Velg hvilket team du skal representere
6. Inne i tjenesten åpner du en terminal og oppretter et [ssb-project](./ssb-project.qmd) ved å skrive:

```{.bash filename="Terminal"}
ssb-project create test-metadata
```

7. Installer pakken ved å skrive inn følgende

```{.bash filename="Terminal"}
cd test-metadata && poetry add dapla-toolbelt-metadata
```

8. Åpne en ny notebook og velg kernel ved navn **test-metadata**

Etter det er du klar for bruke funksjonaliteten i *dapla-toolbelt-metadata*. I eksempelet over ble prosjektet navngitt **test-metadata**, men du kan bare kalle det hva du vil.

## Datadoc

Den anbefalte måten å skape metadata for et nytt datasett er med [Datadoc brukergrensesnittet](./datadoc.qmd). Men det finnes tilfeller hvor det kan være tungvint å bruke og man ønsker å jobbe med metadata ved hjelp av kodespråk. Det kan man gjøre med `Datadoc` klassen i `dapla-toolbelt-metadata` pakken.

### Brukstilfeller

#### Nye tidsperioder

Det primære brukstilfelle er å skape metadata for datasett skapt for nye tidsperioder som en del av produksjonsløp.

I dette tilfelle er Datadoc brukergrensesnittet brukt for å skape det første metadatadokumentet. Man kan deretter bruke metadatadokumentet som en utgangspunkt for nye tidsperioder. `Datadoc` klassen utleder oppdatert informasjon fra filstien til datasettene for nye tidsperioder og oppdaterer metadataen til å stemme.

::: {.callout-note}
Dette forutsetter at strukturen av datasettet og betydningen av variablene er lik mellom tidsperiodene. Om det finnes uforventede avvik så kastes en `InconsistentDatasetsError` med detaljer om avviket.
:::

##### Kodeeksempel

```{.python filename="Notebook"}
from dapla_metadata.datasets import Datadoc

meta = Datadoc(
    dataset_path="gs://ssb-dapla-felles-data-produkt-prod/datadoc/sykefratot/klargjorte_data/person_testdata_p2022_v1.parquet",             # <1>
    metadata_document_path="gs://ssb-dapla-felles-data-produkt-prod/datadoc/sykefratot/klargjorte_data/person_testdata_p2021_v1__DOC.json", # <2>
)
meta.write_metadata_document() # <3>
```

1. En ny tidsperiode av et datasett
2. Eksisterende metadatadokument
3. Skaper et nytt metadatadokument med filsti som stemmer med datasettet, i dette tilfellet `gs://ssb-dapla-felles-data-produkt-prod/datadoc/sykefratot/klargjorte_data/person_testdata_p2022_v1__DOC.json`

## Vardef
kdljfklds

### Opprette ny definisjon

dfskjkldjsf

### Endre eksisterende definisjon

dfdsfklø

### Migrere definisjon fra Vardok

dskfjlkds
