---
title: Bidra til Dapla-manualen
date-modified: "2024-11-22"
lightbox: true
---

Alle i SSB kan bidra til denne manualen. Endringer m√• godkjennes av noen i [Team Statistikktjenester](https://github.com/orgs/statisticsnorway/teams/dapla-stat-developers) eller Alex Crozier (akc@ssb.no). Si gjerne i fra at det ligger en PR √• se p√•.
Vi trenger bidrag med alt fra spr√•kvask, nye artikler og andre gode initiativer!
Har du lyst til √• bidra, men er ikke helt sikker p√• hva du kan bidra med? Ta en titt p√• [issues i GitHub-repoet](https://github.com/statisticsnorway/dapla-manual/issues).

::: {.callout-warning}
Denne nettsiden er √•pen og hvem som helst kan lese det som er skrevet her. Hold det i tankene n√•r du skriver.
:::

Gj√∏r du nyhetsverdige endringer m√• du ogs√• lage et nyhetsinnlegg i [nyhetsdelen av manualen](manual.dapla.ssb.no/news). Mer om det lenger nede.

## Forutsetninger {.unnumbered}

- Man trenger basis git kompetanse, det ligger en fin beskrivelse av det p√• [Beste Praksis siden fra KVAKK](https://statistics-norway.atlassian.net/l/cp/6H4MD86J).
- Man trenger en konto p√• Github, det kan man opprette ved √• [f√∏lge instruksjonene her](../git-og-github.qmd#opprett-github-bruker).
- Man kan l√¶re seg Markdown (enkel tekst formatering), en fin oversikt [finnes her](http://mdcheatsheet.com/).
- Verkt√∏yet Quarto burde installeres for √• kunne se endringene slik som de ser ut p√• nettsiden. [Installasjon instruksjoner finnes her](https://quarto.org/docs/get-started/index.html).

## Fremgangsm√•te

1. Klone repoet 
```{.bash filename="terminal"}
git clone https://github.com/statisticsnorway/dapla-manual.git
```
2. Lage en ny gren
3. Gj√∏re endringen
4. Kj√∏r f√∏lgende og f√∏lge lenken for √• sjekke at alt ser bra ut p√• nettsiden:
```{.bash filename="terminal"}
quarto preview dapla-manual
```
5. √Öpne en PR
6. Be noen √• gjennomg√• endringen og eventuelt godkjenne den
7. Merge PRen 
8. Etter et par minutter skal din endring v√¶re synlig!


### Tittelblock

I dapla-manualen har vi noen konvensjoner vi f√∏lger.
En av de er √• lage en title block som det kalles p√• [quarto sin nettside](https://quarto.org/docs/authoring/title-blocks.html).

Vi ber v√•re bidragsytere om √• lage en lik block med overskrift og datoen artikkelen ble endret. √Öpner man filen til denne siden ser det p√• dette tidspunktet slik ut:

![Tittelblock for denne siden.](../../images/title-block.png){fig-alt="Skjermbilde av tittelblock." #fig-tittelblock}

### Nyhetsinnlegg

[Manualens egen nyhetssiden](../../news/index.qmd) skal oppdaters med et innlegg en nyhetsverdig endring p√• Dapla skjer - for eksempel n√•r manualen f√•r en ny artikkel. Det er ikke n√∏dvendig √• lage en sak om at en side har blitt oppdatert, med mindre endringene er omfattende.

Nyhetssiden er i Quarto sitt blog-format. Fremgangsm√•ten er enkel og beskrives i [quarto sin artikkel om blogger](https://quarto.org/docs/websites/website-blog.html). Ellers anbefales det √• ta en titt p√• hvordan det gj√∏res i dapla-manualen. Alex Crozier (akc@ssb.no) er ansvarlig for nyhetssiden og kan kontaktes dersom man trenger hjelp.

:::{.callout-tip}
# Hvordan skrive nyhetsinnlegg?
Utover det tekniske er det s√¶rlig tre ting √• tenke p√•:

**Kategoriser innlegget**.
Om du skriver en ny artikkel b√∏r du kategorisere innlegget med 'dapla-manual', slik det har blitt gjort i [dette nyhetsinnlegget](../../news/posts/2025-06-07-ssb-altinn-python/index.qmd).

**Bruk emojier for √• kategorisere**
For √• gj√∏re det enda lettere for lesere bruker vi emojier i starten av overskriften som sier noe om nyhetens natur. Trykk `win` + `.` for √• f√• opp emojier. Her er emojiene vi tar i bruk og deres betydning:

üìÑ Ny dokumentasjon (f.eks artikkel i manualen)
üöÄ Endringer p√• Dapla lab
üêç Python
üêçüìö Pythonpakke
‚ùó Driftsmelding
ü•≥ Ny lansering


Er du usikker p√• hvilken emoji du skal bruke kan det fint droppes - eller s√• kan man ta i bruk nye emojier.

**Skriv kort og ha en forklarende overskrift**

:::

### Embedded notebooks

Quarto tilbyr √• legge ved (embed) notebooks inn i nettsiden. Dette er en fin m√•te √• dele kode og output p√•. Men det krever at vi tenker gjennom hvor outputen genereres. Siden Dapla-manualen renderes med GitHub-action, s√• √∏nsker vi ikke √• introdusere kompleksiteten det inneb√¶rer √• generere output fra kode her. I tillegg er det mange milj√∏-spesifikke konfigurasjoner som bestemmer hvordan output kan genereres. Derfor anbefaler vi f√∏lgende tiln√¶rming n√•r man skal legge ved en notebook til et kapittel:

1. Logg deg inn i milj√∏et du √∏nsker √• bruke.
2. Klone ned repoet til Dapla-manualen.
3. Opprett en notebook i mappen ./dapla-manual/notebooks/notebook-navn.ipynb
4. Skriv kode og generer output som du √∏nsker. Husk √• bare bruke data som alle har tilgang til eller de kan generere selv.
5. Embed output i kapitlet du √∏nsker iht til [denne beskrivelsen](https://quarto.org/docs/authoring/notebook-embed.html)
6. P√• toppen av notebooken lager du en raw-celle der du skriver:

```{.yaml filename="notebook"}
---
freeze: true
---
```

7. Kj√∏r denne notebooken fra terminalen med kommandoen:

```{.bash filename="terminal"}
quarto render ./notebooks/<notebook-navn.ipynb> --execute
```

Dette sikrer at vi kan se output etter at boken bygges i GitHub Actions. Husk at notebooks ikke blir strippet for output p√• vanlig m√•te, slik at kun √•pne data skal benyttes. 

Sp√∏r Team Statistikktjenester eller Alex (akc@ssb.no) om du lurer p√• noe.