---
title: Vardef 
date-modified: "01/31/2025"

code-links:
    - text: lese_en_variabel_definisjon.ipynb
      icon: file-code
      href: https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/lese_en_variabeldefinisjon.ipynb
    - text: lese_variabel_definisjoner.ipynb
      icon: file-code
      href: https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/lese_variabel_definisjoner.ipynb
    - text: migrere_variabel_definisjon.ipynb
      icon: file-code
      href: https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/migrere_variabel_definisjon.ipynb
    - text: opprette_gyldighetsperiode.ipynb
      icon: file-code
      href: https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/opprette_gyldighetsperiode.ipynb
    - text: opprette_utkast.ipynb
      icon: file-code
      href: https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/opprette_utkast.ipynb
    - text: publisere_eksternt.ipynb
      icon: file-code
      href: https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/publisere_variabel_definisjon_eksternt.ipynb
    - text: publisere_internt.ipynb
      icon: file-code
      href: https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/publisere_variabel_definisjon_internt.ipynb
    - text: redigere_publisert_variabel.ipynb
      icon: file-code
      href: https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/redigere_publisert_variabel_definisjon.ipynb
    - text: redigere_utkast.ipynb
      icon: file-code
      href: https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/redigere_utkast.ipynb
    - text: sjekk_om_kortnavn_er_ledig.ipynb
      icon: file-code
      href: https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/sjekk_om_kortnavn_er_ledig.ipynb
    - text: slette_utkast.ipynb
      icon: file-code
      href: https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/slette_utkast.ipynb
language:
    code-links-title: "Notebooks"
---

::: {.callout-warning}
Vardef er foreløpig kun tilgjengelig i test-miljøet og er ikke i produksjon.
:::


[Vardef](./vardef.qmd) er SSBs system for dokumentasjon av variabler. Vardef består av et sentralt datalager som man kan interagere med [via et API](https://vardef.intern.test.ssb.no/). Statistikere og forskere i SSB kan interagere med systemet gjennom Vardef-delen av Python-pakken [dapla-toolbelt-metadata](https://pypi.org/project/dapla-toolbelt-metadata/).

Brukerdokumentasjonen for Vardef er skrevet i *notebooks* som er ferdig installert i tjenesten [Vardef-forvaltning](./vardef-forvaltning.qmd) i [Dapla Lab](./dapla-lab.qmd). Det er opprette egne *notebooks* for typiske arbeidsoppgaver man ønsker å gjøre i Vardef, og brukeren kan kjøre disse uten å skrive kode selv. I *notebooks*-ene finner man ferdigskrevet kode som bruker **dapla-toolbelt-metadata** for å jobbe med Vardef. Hvis man ønsker å se innholdet i *notebooks* uten å starte tjenesten [Vardef-forvaltning](./vardef-forvaltning.qmd), så kan gå inn på lenkene til høyre på denne siden.   

På denne siden dokumenteres hvordan *notebooks*'ene i **Vardef-forvaltning** kan benyttes for å gjøre ulike arbeidsoppgaver knyttet til Vardef. 

## Forberedelser

For å jobbe med Vardef i [Vardef-forvaltning](./vardef-forvaltning.qmd) må man først gjøre følgende:

1. Logge deg inn [Dapla Lab](https://lab.dapla.ssb.no/)
2. Åpne **Tjenestekatalog** og trykke **Start** for [Vardef-forvaltning](./vardef-forvaltning.qmd)
3. Under **Data** velger du hvilket team og tilgangsgruppe du skal representere i tjenesten. 
4. Trykk **Start**

Siden det er Dapla-team og tilgangsgrupper i teamene som forvalter variabeldefinisjoner i Vardef, så er det svært viktig at man velger riktig under punkt 3. Hvis man skal opprette en ny definisjon så er det teamet man logger seg inn med i [Vardef-forvaltning](./vardef-forvaltning.qmd) som blir automatisk satt som eier av definisjonen. Tilsvarende er tilfellet for endringer; man må logge seg inn som det teamet som forvalter en variabeldefinisjon for å kunne gjøre endringer. 

## Funksjonalitet

Under finner dere beskrivelser av hvordan man gjør typiske operasjoner mot Vardef.

### Migrere fra Vardok

Ønsker man å migrere en variabeldefinisjon så kan man kjøre notebooken [migrere_variabel_definisjon.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/migrere_variabel_definisjon.ipynb). 

Kjør gjennom *notebook*'en og skriv inn variabeldefinisjonens ID i **Vardok** når man blir bedt om det. Alle seksjonsledere har oversikt over hvilke ID'er fra Vardok som deres seksjon er ansvarlig for. 

Når *notebook*'en er kjørt gjennom så er variabeldefinisjonen migrert fra Vardok til status **Utkast** i Vardef. I denne prosessen oppdaterer *dapla-toolbelt-metadata* all informasjon som kan utledes automatisk, og deretter må brukeren oppdatere gjenværende informasjon før de publiserer den internt eller eksternt. 

#### Oppdatere utkast

Et utkast kan oppdateres ved å kjøre notebooken [redigere_utkast.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/redigere_utkast.ipynb). Den skriver variabeldefinisjonen ned til en fil som brukeren kan gjøre endringer i. Når endringene er gjort, så kan man oppdatere utkastet i slutten av notebooken.

#### Publisere utkast

Når brukeren er fornøyd med utkastet og ønsker å publisere, så kan man velge å publisere internt eller eksternt. Ved migrering av tidligere eksternt publiserte definisjoner fra Vardok, så er hovedregelen at også man publiserer variabeldefinisjonen eksternt i Vardef. 

Man kan publisere en variabeldefinisjon **eksternt** ved å kjøre *notebook*'en [publisere_eksternt.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/publisere_variabel_definisjon_eksternt.ipynb).

Man kan publisere en variabeldefinisjon **internt** ved å kjøre *notebook*'en [publisere_internt.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/publisere_variabel_definisjon_internt.ipynb).


### Ny variabeldefinisjon

For å opprette en ny variabeldefinisjon må man først opprette et utkast, deretter redigere utkastet og til slutt publisere. Da vil man bruke følgende *notebooks*:

1. [opprette_utkast.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/opprette_utkast.ipynb)
2. [redigere_utkast.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/redigere_utkast.ipynb)
3. [publisere_internt.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/publisere_variabel_definisjon_internt.ipynb) eller [publisere_eksternt.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/publisere_variabel_definisjon_eksternt.ipynb)


### Ny gyldighetsperiode

Ny gyldighetsperiode i Vardef betyr at man ønsker å gjøre endringer i en eksisterende variabeldefinisjon som gjør at den får en ny betydning. Dette betyr at definisjonsteksten endres, og denne endringen krever at den får en ny gyldighetsperiode. Dette kan kun gjøres på variabeldefinisjoner som allerede er publisert internt eller eksternt.

For opprette en ny gyldighetsperiode kan man kjøre gjennom notebooken [opprette_gyldighetsperiode.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/opprette_gyldighetsperiode.ipynb).

Her blir man bedt om å oppgi kortnavnet til variabeldefinisjonen som skal ha ny gyldighetsperiode, deretter skrives den til en fil hvor endringer kan gjøres. Til slutt oppdateres variabeldefinisjonen i Vardef. 


### Patch

En *patch* i Vardef er en mindre endring som ikke endrer betydningen av variabeldefinisjonen. Man kan opprette en *patch* ved å kjøre *notebook*'en [redigere_publsiert_variabel.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/redigere_publisert_variabel_definisjon.ipynb).

### Lese ut informasjon

For å hente ut informasjon fra Vardef finnes det ulike *notebooks* avhengig av hva man ønsker å hente ut. 

#### En variabeldefinisjon

*Notebooken* [lese_en_variabeldefinisjon.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/lese_en_variabeldefinisjon.ipynb) lar deg hente ut informasjon om en konkret variabeldefinisjon. Man kan hente ut all informasjon om variabeldefinisjonen, eller hente ut noen få informasjonselementer. 

#### Alle variabeldefinisjoner

*Notebooken* [lese_variabel_definisjoner.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/lese_variabel_definisjoner.ipynb) lar deg hente ut informasjon om alle variabeldefinisjoner og filtrere disse basert på ulike kriterier.

#### Ledige kortnavn

*Notebooken* [sjekk_om_kortnavn_er_ledig.ipynb](https://github.com/statisticsnorway/dapla-toolbelt-metadata/blob/main/demo/variable_definitions/sjekk_om_kortnavn_er_ledig.ipynb) lar deg sjekke om et kortnavn er tatt eller ikke. Kortnavn i Vardef må være unikem, så det kan være lurt å sjekke om ønsket kortnavn er ledig før man prøver å publisere. 

## Arbeide med YAML-filer

::: {.callout-caution}
NB! syntaks highlightning kan variere fra, farger på yaml kode i eksempler er kun veiledende
::: 

### Yaml fil struktur
YAML-filene følger samme struktur med noen små variasjoner.

#### Mal
Denne filen genereres når man vil opprette en ny variabeldefinisjon. 

```{.YAML .code}
# --- Variabeldefinisjon mal ---
```

::: {.callout-note}
#### Filnavn mal
Lagres som `variable_definition_template_<timestamp>.yaml`
:::

::: {.callout-caution collapse=True}
#### NB! Innholder placeholder tekst som må endres

```{.YAML .code}
contact:
    title:
        nb: |-
            generert tittel
        nn:
        en:
```
::: 

#### Variabeldefinisjon

Dette er en yaml fil som inneholder alle lagrede verdier for en variabeldefinisjon.

```{.YAML .code}
# --- Variabeldefinisjon ---
```

::: {.callout-note}
#### Filnavn variabeldefinisjon
Lagres som `variable_definition_<kortnavn>_<id>_<timestamp>.yaml`
:::

#### Felt blokk
Alle felt for 
Informasjonsseksjon på topp.
Inneholder informasjon om feltet er obligatorisk, beskrivelser av innhold og eksempler. 

```{.YAML .code}
# ! Obligatorisk felt !
# Variabelens navn. Dette skal ikke være en mer “teknisk” forkortelse, men et navn som er forståelig for mennesker.
# -------------------------
# >>> EKSEMPEL:
# name:
#   nb: |-
#       Lønnsinntekter
name:
```

Hvis feltet er markert som valgfritt trenger det ikke lagres noe verdi.
```{.YAML .code}
# ~ Valgfritt felt ~
```

Oligatoriske  felt må alltid ha verdi, men verdi kan være satt fra systemet.
Som for eksempel `variable-status`som alltid er `DRAFT` når man oppretter ny variabeldefinisjon og endres ikke før man publiserer.
```{.YAML .code}
# ! Obligatorisk felt !
```
### Redigere YAML-filen

#### Enkle verdier

Består av en nøkkel og en verdi.

::: {.callout-note collapse=True}
##### Gjelder feltene:
  - `classification_reference`
  - `measurement_type`
  - `external_reference_uri`
  - `owner.team`
:::

Dette er felt der vi forventer kort tekst uten formattering.
Typen vi bruker er `DoubleQuotedScalar`. 
All tekst må være omkranset av doble fnutter. `""`. 

Verdien skrives på samme linje som nøkkelen

::: {.callout-tip}
#### Korrekt
```{.YAML .code}
short_name: "landbak"

measurement_type: "03"
```
::: 

::: {.callout-warning collapse=True}
#### Feil plassering
```{.YAML .code}
measurement_type: 
"03"

short_name"landbak"
```
::: 

::: {.callout-warning collapse=True}
#### Fjernet `:`
```{.YAML .code}
short_name"landbak"
```
::: 

::: {.callout-warning collapse=True}
#### Feil type
Hvis fnuttene fjernes vil verdien tolkes som et tall og validering vil feile.
```{.YAML .code}
measurement_type: 03
```
::: 

#### Flerspråklige felt


::: {.callout-note collapse=True}
##### Gjelder feltene:
  - `name`
  - `definition`
  - `comment`
  - `contact.title`
:::

```{.YAML .code}
contact:
    title:
        nb: |-
            generert tittel
        nn:
        en:
    email: generert@ssb.no
```

Format er `LiteralScalar`. Et blokk symbol `|-` følger nøkkel. Format lagres.
Streng indentering. Tekst må begynne direkte under plassering av blokk symbol `|`

::: {.callout-tip collapse=True}
#### Korrekt
```{.YAML .code}
name:
    nb: |-
        Her starter teksten akkurat under blokk symbolet og vil lagres uten feil.
    nn:
    en:
```
::: 

::: {.callout-tip collapse=True}
#### Lagre avsnitt
```{.YAML .code}
comment:
    nb: |-
        Her er det en god plan, først er det en beskrivelse som innledning.

        Deretter bevisst en blank linje:
          - Og en liste med punkter
          - Flere
    nn:
    en:
```
::: 

::: {.callout-warning collapse=True}
#### Feil indentering
```{.YAML .code}
name:
    nb: |-
Her er teksten ikke indentert og vil føre til feil når du lagrer.
    nn:
    en:
```
::: 

::: {.callout-caution collapse=True}
#### Uønsket formattering
```{.YAML .code}
name:
    nb: |-
        Her er deles teksten opp
        plutselig. Og den vil lagres akku-
        rat slik du ser den.
    nn:
    en:
```
::: 


::: {.callout-tip collapse=True}
#### Spesialtegn
```{.YAML .code}
comment:
    nb: |-
        Her er det en god plan, først er det en beskrivelse som innledning:

        Deretter bevisst en blank linje:
          - Og en liste med punkter
          - Flere
    nn:
    en:
```
::: 

::: {.callout-note collapse=True}
#### Feil syntaks highlightning
```{.YAML .code}
name:
    nb: |-
        Her er kan vi lagre spesialtegn som : men det kan føre til feil syntaks
    nn:
    en:
```
:::

::: {.callout-warning collapse=True}
#### Spesialtegn
```{.YAML .code}
comment:
    nb: Her er blokk symbolet fjernet og kolon tolkes som ny nøkkel-verdi par: ved lagring
    nn:
    en:
```
::: 

#### Lister
Lagre som tekst strenger. Bruker doble.

::: {.callout-note collapse=True}
##### Gjelder feltene:
  - `unit_types`
  - `subject_fields`
  - `related_variable_definition_uris`
  - `owner.groups`
:::

::: {.callout-note}
Lister bruker også type `DoubleQuotedScalar`. 
All tekst må være omkranset av doble fnutter. `""`
:::

::: {.callout-tip}
#### Korrekt type
```{.YAML .code}
unit_types:
    - "20"
```
:::

::: {.callout-warning collapse=True}
#### Feil type
```{.YAML .code}
unit_types:
    - 01
    - 02
```
::: 

::: {.callout-tip collapse=True}
#### Korrekt indentering
```{.YAML .code}
unit_types:
    - "20"
```
:::

::: {.callout-warning collapse=True}
#### Feil indentering
```{.YAML .code}
unit_types:
- "20"
```
::: 

#### Andre typer

::: {.callout-tip}
#### Korrekt dato
```{.YAML .code}
valid_from: 2003-01-01
```
:::

::: {.callout-tip}
#### Korrekt boolean
```{.YAML .code}
contains_special_categories_of_personal_data: true
```
:::

::: {.callout-tip}
#### Korrekt variabel status
```{.YAML .code}

variable_status: DRAFT


variable_status: PUBLISHED_INTERNAL


variable_status: PUBLISHED_EXTERNAL
```
:::

<style>
code span.co {
    color:#408080;
    font-style: inherit;
}
code span.fu{
  color: #88f;
}
code span.cp{
  color: #a2f;
}
code span.c12{
  color: #ba2121;
}
code span.st{
  color: #ba2121;
}
pre code.sourceCode > span{
  color:rgba(8, 8, 8, 0.99);
}
#cb2-4{
  background-color: yellow;
}
</style>