---
title: Git-grensesnitt i Jupyter
---

I denne artikkelen viser vi hvordan man gjennomfører anbefalt [git arbeidsflyt](https://statistics-norway.atlassian.net/wiki/spaces/BEST/pages/3206283277/Hvordan+er+anbefalt+git+arbeidsflyt) i Jupyter med Git-grensesnittet. 

##### 1. git clone

![Grensesnitt før kloning](../images/git-grensesnitt/git-clone1.png){#fig-git-clone1 fig-alt="Grensesnitt før kloning" width="40%"}

![Grensesnitt ved kloning](../images/git-grensesnitt/git-clone2.png){#fig-git-clone2 fig-alt="Grensesnitt ved kloning" width="50%"}




##### 2. git switch main + git pull

![git switch main + git pull](../images/git-grensesnitt/switch-main-pull.png){#fig-git-clone2 fig-alt="git switch main + git pull" width="50%"}




##### 3. git status

![git status](../images/git-grensesnitt/git-status.png){#fig-untracked-changes fig-alt="git status" width="35%"}




##### 4. git add

![git add](../images/git-grensesnitt/git-add1.png){#fig-untracked-changes fig-alt="Grensesnittet ved ulagrede endringer" width="35%"}



##### 5. git commit

![git commit](../images/git-grensesnitt/commit.png){#fig-staged fig-alt="Commit message" width="40%"}




##### 6. git push

![git push](../images/git-grensesnitt/git-push.png){#fig-staged fig-alt="git push" width="40%"}




##### 7. git fetch

![git fetch](../images/git-grensesnitt/git-pull.png){#fig-staged fig-alt="git fetch" width="40%"}




##### 8. git merge origin/main

![git merge](../images/git-grensesnitt/git-merge.png){#fig-staged fig-alt="git merge" width="60%"}

![git merge](../images/git-grensesnitt/git-merge2.png){#fig-staged fig-alt="git merge2" width="60%"}




##### 9. git push

![git push](../images/git-grensesnitt/git-push.png){#fig-staged fig-alt="git push" width="40%"}