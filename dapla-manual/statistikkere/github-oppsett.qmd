---
title: "GitHub: Bruker og oppsett"
format: html
---

### Opprett GitHub-bruker

For å lage repoer og bidra til eksisterende repoer må man ha en GitHub-bruker.

::: {.callout-note appearance="simple"}
SSB har valgt å ikke sette opp SSB-brukerne til de ansatte som GitHub-brukere. En viktig årsak er at en GitHub-konto ofte regnes som en del av den ansattes CV. For de som aldri har brukt GitHub før kan det virke fremmed, men det er nok en fordel på sikt når alle blir godt kjent med denne arbeidsformen.
:::

Slik gjør du det:

1.  Gå til <https://GitHub.com/>
2.  Trykk **Sign up** øverst i høyre hjørne
3.  I dialogboksen som åpnes, se @fig-GitHub-user-gen, skriver du inn din e-postkonto og lager et passord. Dette trenger ikke være din SSB-bruker og e-post. Hvis du bruker en en personlig e-postkonto er det viktig at du tydeliggjør hvem du er så kollegaer vet at du jobber i SSB når de ser aktivitet fra deg.

![Dialogboks for opprettelse av GitHub-bruker.](../images/github_register.JPG){#fig-GitHub-user-gen fig-alt="Bilde av GitHub-siden for å generere en brukerkonto" width="50%"}

Du har nå laget en egen GitHub-bruker. I neste steg skal vi knytte denne kontoen til din SSB-bruker.

### To-faktor autentisering {#sec-tofaktor}

Hvis du har fullført forrige steg har du nå en GitHub-konto. Hvis du står på din profil-side ser den ut som i @fig-GitHub-exmaple-userpage.

![Et eksempel på hjemmeområdet til en GitHub-bruker](../images/github_profile.png){#fig-GitHub-exmaple-userpage fig-alt="Bilde av GitHub-siden for en bruker" width="75%"}

Det neste vi må gjøre er å aktivere 2-faktor autentisering, siden det er dette som benyttes i SSB. Hvis du står på siden i bildet over, så gjør du følgende for å aktivere 2-faktor autentisering mot GitHub:

::::: grid
::: g-col-8
1.  Trykk på den lille pilen øverst til høyre og velg **Settings**(se @fig-GitHub-open-settings).

2.  Deretter velger du **Password and authentification** i menyen til venstre.

3.  Under **Two-factor authentication** trykker du på **Enable**.
:::

::: g-col-4
![Åpne settings for din GitHub-bruker.](../images/github_settings_menu.png){#fig-GitHub-open-settings fig-alt="Bilde av GitHub-menyen for å åpne Settings-menyen." width="50%"}
:::
:::::

4.  @fig-GitHub-enable-2fa viser dialogboksen som vises. Velg **Enable two-factor authentification**.

![Dialogboks som åpnes når 2FA skrus på første gang.](../images/github_2fa_enable.JPG){#fig-GitHub-enable-2fa fig-alt="Bilde av GitHub-dialogboks for å skru på 2-faktor autentisering." width="75%"}

5.  @fig-GitHub-2fa-app viser dialogboksen som vises for å velge hvordan man skal autentisere seg. Her anbefales det å velge **Set up using an app**, slik at du kan bruke *Microsoft Authenticator*-appen på din mobil.

![Dialogboks for å velge hvordan man skal autentisere seg med 2FA.](../images/githbu_2fa_app.JPG){#fig-GitHub-2fa-app fig-alt="Bilde av GitHub-dialogboks for å velge hvordan man skal autentisere seg med 2-faktor autentisering." width="75%"}

@fig-GitHub-QR viser QR-koden som vises. Denne skal vi bruke i neste steg.

![QR-kode som skannes av Microsoft Authenticator.](../images/github_2fa.png){#fig-GitHub-QR fig-alt="Bilde av GitHub-dialogboks for å velge hvordan man skal autentisere seg med 2-faktor autentisering." width="75%"}

::::: grid
::: g-col-8
6.  Strekkoden over skal skannes i din **Microsoft Authenticator**-app på mobilen, som vist i @fig-authenticator. Åpne appen, trykk på **Bekreftede ID-er**, og til slutt trykk på **Skann QR-kode**. Deretter skanner du QR-koden fra punkt 5.

7.  Når koden er skannet har du fått opp følgende bilde på appens hovedside (se bilde til høyre). Skriv inn den 6-siffer koden på GitHub-siden med QR-koden.

8.  Til slutt lagrer du **Recovery-codes** et trygt sted som bare du har tilgang til.
:::

::: g-col-4
![Mobilappen *Microsoft authenticator*](../images/authenticator.jpg){#fig-authenticator fig-alt="Bilde av GitHub-dialogboks for å velge hvordan man skal autentifisere seg med 2-faktor autentisering." width="50%"}
:::
:::::

Nå har vi aktivert 2-faktor autentisering for GitHub og er klare til å knytte vår personlige konto til vår SSB-bruker på SSBs "GitHub organisation" [**statisticsnorway**](https://GitHub.com/statisticsnorway).

### Koble deg til SSB

I forrige steg aktiverte vi 2-faktor autentisering for GitHub. Det neste vi må gjøre er å koble oss til **Single Sign On (SSO)** for SSB sin organisasjon på GitHub:

1.  Trykk på lenken <https://GitHub.com/orgs/statisticsnorway/sso>
2.  I dialogboksen som dukker opp trykker du på **Continue**, slik som vist i @fig-GitHub-sso.

![Single Sign on (SSO) for SSB sin organisasjon på GitHub](../images/github_sso.png){#fig-GitHub-sso fig-alt="Bilde av GitHub-dialogboks for single sign on." width="50%"}

Når du har gjennomført dette så har du tilgang til **statisticsnorway** på GitHub. Går du inn på [denne lenken](https://GitHub.com/statisticsnorway?view_as=member) så skal du nå kunne lese både **Public**, **Private** og **Internal** repoer, slik som vist i @fig-GitHub-member.

![Medlemsvisning for SSB sin GitHub-organisasjon.](../images/github_asmember.png){#fig-GitHub-member fig-alt="Bilde av repoene på GitHub for de som er tilknyttet staitsticsnorway."}

### Personal Access Token (PAT)

Når vi skal jobbe med SSB-kode som ligger lagret hos **statistcsnorway** på GitHub, så må vi autentisere oss. Måten vi gjøre det på er ved å generere et **Personal Access Token** (ofte forkortet *PAT*) som vi oppgir når vi vil hente eller oppdatere kode på GitHub. Da sender vi med PAT for å autentisere oss for GitHub.

#### Opprette PAT {#sec-pat}

For å lage en PAT som er godkjent mot *statisticsnorway* gjør man følgende:

1.  Gå til din profilside på GitHub og åpne **Settings** slik som ble vist @sec-tofaktor.

2.  Velg **Developer Settings** i menyen til venstre.

3.  I menyen til venstre velger du **Personal Access Token**, og deretter **Tokens (classic)**.

4.  Velg **Generate new token** og deretter **Generate new token (classic)**.

5.  Under **Note** kan du gi PAT'en et navn. Velg et navn som er intuitivt for deg. Hvis du skal bruke PAT til å jobbe mot Dapla, så ville jeg ganske enkelt kalt den *dapla*. Hvis du skal bruke den mot bakkemiljøet ville jeg kalt den *prodsone* eller noe annet som gjør det lett for det skjønne innholdet i ettertid.

6.  Under **Expiration** velger du hvor lang tid som skal gå før PAT blir ugyldig. Dette er en avvening mellom sikkerhet og hva som er praktisk. Det anbefales at du velger **365 dager**. Når PAT utløper må du gjenta stegene i dette kapittelet.

7.  Under **Select scopes** velger du **repo** og **workflow** slik som vist i @fig-GitHub-token.

![Gi token et kort og beskrivende navn](../images/github_pat.png){#fig-GitHub-token fig-alt="Bilde av GitHub-siden for generering av Personal Access Token"}

8.  Trykk på **Generate token** nederst på siden og du får noe lignende det du ser i @fig-GitHub-token-gen.

![Token som ble generert.](../images/github_pat2.png){#fig-GitHub-token-gen fig-alt="Bilde av GitHub-siden for det genererte tokenet"}

9.  Kopier deretter PAT til en midlertidig fil. Grunnen er at du aldri vil se det igjen her etter at vi har gjennomført neste steg.

10. Deretter trykker du på **Configure SSO** og velger **Authorize** ved siden statisticsnorway, slik som vist i @fig-GitHub-token-authorize. Svar deretter på spørsmålene som dukker opp.

![Autorisering av Token mot SSBs GiHub-organisasjon.](../images/github_pat3.png){#fig-GitHub-token-authorize fig-alt="Bilde av GitHub-siden for å autorisere Token mot statisticsnorway"}

Vi har nå opprettet en PAT som er godkjent for bruk mot SSB sin kode på GitHub. Det betyr at hvis vi vil jobbe med **Git** på SSB sine maskiner i sky eller på bakken, så må vi sendte med dette tokenet for å få lov til å jobbe med koden som ligger på **statisticsnorway** på GitHub.

#### Lagre PAT i Dapla Lab {#lagre-pat}

Anta at min personlige GitHub-bruker er **SSB-Chad** og at min Personal Access Token er **a13bc12**. Da kan jeg gjøre følgende for å lagre det i Dapla Lab:

1.  Logg inn på <https://lab.dapla.ssb.no>
2.  Trykk på 'My account'
3.  Naviger til Git-fanen
4.  Skriv inn brukernavn (f.eks **SSB-Chad**) under Username for Git
5.  Skriv inn e-posten som er koblet opp mot Git
6.  Lim inn token (f.eks **a13bc12**) der det står 'Git Forge Personal Access Token' vist i @fig-dapla-lab-my-account

![DaplaLab My account: lagre PAT](../images/dapla-lab-my-account.png){#fig-dapla-lab-my-account fig-alt="Skjermbilde av DaplaLab innstillinger for Git"}