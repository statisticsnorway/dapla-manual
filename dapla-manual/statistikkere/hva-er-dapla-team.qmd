# Hva er Dapla-team?

For å kunne jobbe på Dapla må man være en del av et **Dapla-team**. Et dapla-team er en gruppe personer som har tilgang til spesifikke ressurser på Dapla. Ressursene kan være data, kode eller tjenester. Følgelig er teamet helt sentral for tilgangsstyringen på Dapla. Derfor er det viktig at alle som jobber på Dapla gjør seg godt kjent med innholdet i dette delen.

## Opprette Dapla-team

Dapla-team opprettes av dataeier for teamets kildedata. I de fleste tilfeller vil dette være en seksjonsleder i SSB. Selve opprettelsen av teamet gjøres i **Manager-portalen**.

::: {.callout-warning}
# Manager-portalen er under arbeid
Manager-portalen er under arbeid og vil være klar i 1. kvartal 2024. I mellomtiden kan man bruke den [gamle portalen for å opprette Dapla-team](https://start.dapla.ssb.no/).
:::

## Roller i teamet

Medlemskap i et Dapla-team gir tilgang på spesifikke ressurser på Dapla. Men siden kildedataene til alle team er klassifisert som *sensitive*, så kan ikke alle på teamet ha lik tilgang til alle ressurser. Av den grunn er det definert 5 ulike roller på et team. Under forklarer vi hva de ulike rollene innebærer.

### Managers

Rollen *managers* skal bestå av en eller flere data-ansvarlige (ofte omtalt som data-eiere eller seksjonsledere). *managers* har ansvar for følgende i teamet:

- opprette teamet
- hvem i teamet som får tilgang til hvilke data og tjenester.
- at teamet følger SSBs retningslinjer for tilgangsstyring.
- at teamet følger SSBs retningslinjer for klassifisering av data.
- vedlikehold og monitorering av tilganger.
- at teamet følger og forstår hvordan sensitive data skal behandles i SSB.

*Manager*-rollen krever ingen tilgang til data eller databehandlende tjenester på Dapla. 

### Data-admins

Rollen *data-admins* er en priveligert rolle blant de som jobber med data i teamet. Rollen skal kun tildeles 2-3 personer på et team. *data-admins* har tilgang til samme data og ressurser som *developers*, med følgende unntak:

- de er forhåndsgodkjent til å gi seg selv tidsbegrenset tilgang til kildedata ved behov. Tilgang til kildedata skal kun aktiveres i særskilte tilfeller, der eneste løsning er å se på data i klartekst. Tilgang til kildedata skal kun gis i en begrenset periode, og krever en skriftlig begrunnelse. *managers* skal lett kunne monitere hvem som aktiverer denne tilgangen og hvor ofte. 
- de kan godkjenne endringer i automatiske jobber som prosesserer kildedata til inndata.
- de kan overføre kildedata mellom bakke og sky.  

### Developers

Rollen *developers* er den mest vanlige rollen på et Dapla-team. Denne rollen skal tildeles alle som jobber med data i teamet som ikke har *data-admins*-rollen. *developers* har tilgang til følgende ressurser:

- alt av teamets data, med unntak av kildedata.
- alle ressurser som behandler datatilstandene fra inndata til utdata.

### Consumers

Gruppen consumers er medlemmer av andre team som skal få tilgang til de dataene teamet velger å dele.  Det er søkers seksjonsleder som skal godkjenne denne tilgangen, ikke managers for teamet som eier dataene. 

### Support

Gruppen support skal brukes når team trenger assistanse fra IT-utviklere eller andre for å løse et problem som innebærer at IT-utvikleren må ha tilgang. IT-utvikleren legges da i support-gruppen. Følgende gjelder for denne gruppen:

- Tilgangen skal være tidsbegrenset (< 8 timer).
- Tilgangen bør ikke som default gi tilgang til kildedata-prosjektet.
- Tilgangssøknaden skal begrunnes.
- Skal godkjennes av teamets managers.

## Ressurser

Når du oppretter et dapla-team så får man en grunnpakke med ressurser som de fleste i SSB vil trenge for å kunne jobbe med data på Dapla. I tillegg kan teamet selvbetjent skru på andre tjenester hvis man ønsker det. I det følgende forklarer vi hva som er inkludert i grunnpakken, og hva som er tilgjengelig for å skru på ved behov.

### Grunnpakken

Etter at et nytt Dapla-team er opprettet er følgende ressurser tilgjengelig for teamet:

- Et IaC-repo på GitHub som definerer alle ressursene for teamet på Dapla. Kort fortalt er dette en samling med tekstfiler som beskriver hvordan teamets ressurser skal settes opp. IaC står for *Infrastructure as Code* og er en måte å automatisere oppsett av ressurser på.

- Ett Google-prosjekt i et prod-miljø med en lagringsbøtte for kildedata.

- Ett Google-prosjekt i et test-miljø med en lagringsbøtte for kildedata.

- Ett Google-prosjekt  i et prod-miljø med en lagringsbøtte for datatilstandene inndata, klargjorte data, statistikkdata og utdata. Det blir også opprettet en lagringsbøtte for deling av data med andre Dapla-team.

- Ett Google-prosjekt i et test-miljø med en lagringsbøtte for datatilstandene inndata, klargjorte data, statistikkdata og utdata. Det blir også opprettet en lagringsbøtte for deling av data med andre Dapla-team.

- *Just-In-Time Access (JIT)* applikasjon som kan brukes av *data-admins* for å gi seg selv tidsbegrenset tilgang til kildedata.

Grunnpakken med ressurser som opprettes reflekterer at statistikkproduksjon skal jobbe med data iht vedtatte datatilstander, og at disse datatilstandene automatisk klassifiseres som enten sensitive, skjermede eller åpne data.

### *Features*

I tillegg til grunnpakken med ressurser, så kan teamet selvbetjent skru på følgende *features* eller tjenester ved behov:

- [Transfer Service](./transfer-service.html) kan skrus på hvis teamet trenger å synkronisere data mellom ulike lagringssystemer. For eksempel mellom bakke og sky, eller mellom to ulike skytjenester.

- [Kildomaten](./kildomaten.html) kan skrus på hvis teamet trenger å automatisere overgangen fra kildedata til inndata.

Foreløpig er det kun disse to *features* som er tilgjengelig. Det vil komme flere etterhvert som behovene melder seg.

[Les mer om features](./features.html) her. 

## Miljøer

Et Dapla-team har tilgang til to ulike miljøer på Dapla. Disse er:


### prod

kldsfjkds

### test

dkfs    

### dev

kfldjgklfjg


## GitHub-team

Ved opprettelsen av et Dapla-team så blir det også opprettet et tilsvarende GitHub-team med samme navn som Dapla-teamet. Grunnen til at det blir opprettet et GitHub-team er at GitHub er en sentral del av Dapla. Alle ressurser som skal opprettes på plattformen defineres av GitHub-repoer, og vi ønsker at tilganger her også skal reflektere tilgangene på Dapla. 

For eksempel vil et team med navnet **dapla-example** få et GitHub-team med navnet **dapla-example**. Alle som er medlem av Dapla-teamet vil automatisk bli medlem av GitHub-teamet. I tillegg vil gruppetilhørighet og tilgangsroller på GitHub-teamet reflektere tilgangsroller på Dapla-teamet. For eksempel så kan **dapla-example-data-admins** gis tilgang til repo, og da vil alle som er medlem av Dapla-teamet med rollen *data-admins* få tilgang til repoet. Dette benyttes blant annet for å gi teamet tilgang til automation-mappen i sitt IaC-repo. I tillegg kan teamet bruke GitHub-teamet til å gi tilgang til andre GitHub-repoer som er relevante for teamet, for eksempel kodenbasen til en statistikkproduksjon eller lignende. Fordelen er at tilganger er gitt på teamnivå og ikke på personnivå. For eksempel hvis *manager* for teamet fjerner en ansatt fra developers-gruppa, så mister de all tilgang til data, tjenester og kode på GitHub som er tilgjengelig for *developers*. 
