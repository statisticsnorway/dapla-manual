{
  "hash": "43a882d0525f5a2316765b1c019e04a9",
  "result": {
    "markdown": "---\ntitle: Velkommen\nfreeze: true\nexecute:\n    echo: false\n    include: true\n---\n\n::: {.cell execution_count=1}\n\n::: {.cell-output .cell-output-stdout}\n```\nSist endret: 2024-07-11 av Alex Crozier\n```\n:::\n:::\n\n\nDenne manualen tar sikte p친 친 gi SSB-ansatte mulighet til 친 ta i bruk Dapla uten hjelp fra eksperter. Boken er delt i syv kapitler som er kort skildret i denne innledningen, i tillegg til en appendiks, en [blogg](../blog/index.qmd) og eksempel-notebooks. Under hjelp-fanen 칮verst p친 nettsiden finner du blant annet siden [FAQ](../FAQ.html) hvor ofte stilte sp칮rsm친l besvares. I denne boken omtaler vi den gamle produksjonssonen, ofte kalt prodsonen, som **bakke**, og det nye skymilj칮et Google Cloud som **sky**. Det er ikke helt presist men duger for form친lene i denne boken.\n\n::: {.callout-tip}\n## Sett i gang p친 bakken!\nDet er tilrettelagt for en *treningsarena* i bakkemilj칮et (jupyter lab). Dette milj칮et er nesten identisk med det som m칮ter deg p친 Dapla, med unntak av at du her har tilgang til mange av de gamle systemene og mye mindre 'hestekrefter' i maskinene. Ideen er at SSB-ere ofte vil 칮nske 친 l칝re seg de nye verkt칮yene^[Det som omtales som *nye verkt칮y* vil som regel bety R, Python, Git, GitHub og Jupyterlab.] i kjente og kj칝re omgivelser f칮rst, og deretter flytte et ferdig skrevet produksjonsl칮p til Dapla.\n:::\n\nManualen er delt opp i syv kapitler: F칮rste kapittel handler om Dapla-team. 칀 ha et team er en forutsetningen for 친 drive databehandling p친 platformen. Dermed er det et naturlig f칮rste steg 친 opprette et team.\n\nI andre kapittel, data, forklares blant annet hvordan data leses, lagres og deles. Her tar vi for oss bruk av v친r interne Python-pakke [dapla-toolbelt](https://pypi.org/project/dapla-toolbelt/), og forklarer hva det vil si at data lagres i b칮tter.\n\nTredje kapittel, kode, tar utgangspunkt i at man skal starte 친 kode opp sin statistikkproduksjon eller kj칮re eksisterende kode. Her dekkes temaer som versjonsh친ndtering p친 github og virtuellle milj칮er i b친de Python og R. Verkt칮yet ssb-project er en viktig del av dette kapitlet.\n\nFjerde kapittel handler om standarder og beskriver de standardene vi m친 forholde oss til n친r vi driver statistikkproduksjon p친 dapla. Dette inkluderer versjonering av filer, mappestrukturer og filnavn. \n\nI kapittel fem, metadata, kan du blant annet l칝re om Datadoc - et verkt칮y for 친 dokumentere datasett og variablene som utgj칮r datasettet.\n\nI sjette kapittel kan du l칝re om Dapla Lab: v친r utforsker og platform for 친 kj칮re og skrive kode, og kommunisere med Google Cloud Platform. I skrivende stund er Dapla Lab i beta, og artikkelen dermed uferdig.\n\nI syvende kapittel viser vi til datatjenestene som tilbys p친 Dapla. I dette kapitlet er det artikler om automatisk kildedataprosessering med [kildomaten](kildomaten.qmd), [pseudonymisering](./dapla-pseudo.qmd), [dapla-statbank-client](statistikkbanken.qmd) og tilgangsstyring med [Dapla Ctrl](dapla-ctrl.qmd).\n\nTil slutt har vi en appendiks med litt forskjellig innhold. Her finnes det artikler om alt fra Altinn 3 til hvordan man kan bidra til denne manualen.\n\nForh친pentligvis senker denne boken terskelen for 친 ta i bruk Dapla. Kommentarer og 칮nsker vedr칮rende boken tas imot med 친pne armer. Dette kan gj칮res ved 친 lage en issue i [GitHub-repoet](https://github.com/statisticsnorway/dapla-manual/issues).\n\nGod forn칮yelse游때\n\n::: {.callout-note}\n## Vi trenger bidragsytere!\nDapla er i konstant utvikling og det er manualen og! Derfor trenger vi flere bidragsytere til 친 fjerne utdatert informasjon, forbedre eksisterende artikler og skrive nye.\n\nKunne du tenkt deg 친 bidra? Les om hvordan du kan bidra i [denne artikkelen](./contribution.qmd) i appendiksen.\nHar du lyst til 친 bidra, men er ikke helt sikker p친 hva du kan bidra med? Ta en titt p친 [issues i GitHub-repoet](https://github.com/statisticsnorway/dapla-manual/issues).\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}