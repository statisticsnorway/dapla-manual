{
  "hash": "d73747887b2597f36670af32f8849ae2",
  "result": {
    "markdown": "---\ntitle: Data-Collector\nfreeze: true\nexecute:\n    echo: false\n    include: true\n\n---\n\n::: {.cell execution_count=1}\n\n::: {.cell-output .cell-output-stdout}\n```\nSist endret: 2024-11-08 av Rupinder Kaur\n```\n:::\n:::\n\n\n::: {.callout-warning}\n## Data Collector skal avvikles\n\nDet er bestemt at Data Collector skal avvikles og derfor er det ikke ønskelig å tilby nye team å bruke tjenesten. Ta kontakt med team Statistikktjenester dersom du har et behov for å bruke Data Collector. \n:::\n\nData Collector (DC) er et rammeverk for bruk av REST APIer som samler inn data fra eksterne ressurser og skriver det til kildebøtter. DC kjører en deklarativ spesifikasjon ved kjøretid som beskriver hvordan data skal samles inn. Spesifikasjonen er bygget med en veldefinert DSL.\n\nDC-jobb startes fra Jupyter ved å bruke en funksjon fra Dapla Toolbelt. Innsamlingsjobber beskrives med en  **specification** (json-fil).\n \n [Les mer om arkitektur og funksjonalitet](https://statistics-norway.atlassian.net/wiki/spaces/DAPLA/pages/3409772746/Data+Collector)\n\n\n## Bruke Collector fra Dapla-lab\n\nFør brukeren kan kjøre DC fra [Dapla Lab](./dapla-lab.qmd), må en team Statistikktjenester ha satt opp en instans for teamet. \n\n### Sett opp collector\n\n```{.python filename=\"notebook\"}\nimport json\n\nfrom dapla import CollectorClient\n\ncollector_url = \"https://data-collector-<team_navn>.intern.ssb.no/tasks\"\ncollector = CollectorClient(collector_url)\nspecification = None\n\n# Load specification from file\nwith open(\"<specification_file>.json\") as specification_file:\n    specification = json.load(specification_file)\n\ntopic = specification['configure'][0]['globalState']['global.topic']\nprint (topic)\n\n```\n\n### Start data-innsamlingsjobb\n\n```{.python filename=\"notebook\"}\nresponse = collector.start(specification)\ntask_id = response.json()['workerId']\nprint(f\"Startet collector jobb, data skal bli skrevet til gs://<kilde-bøtte>/{topic}/\")\n\n```\n\n### Liste kjøreneder tasks\n\n```{.python filename=\"notebook\"}\nrunning_tasks = collector.running_tasks().json()\nprint(running_tasks)\n\n```\n\n### Stoppe kjøreneder tasks\n\n```{.python filename=\"notebook\"}\n\nstop_response = collector.stop(task_id)\nprint(stop_response)\n     \n```\n\n## Konfigurasjoner\n\nDet er 3 Dapla-team med kjørende DC-instanser i prod- og test-miljøet: \n\n**collector-url**\n\n- **skatt-person**\n  - TEST:\n    - skattemelding: https://data-collector-skatt-person-skattemelding.intern.test.ssb.no/tasks\n    - skatteoppgjor: https://data-collector-skatt-person-skatteoppgjor.intern.test.ssb.no/tasks\n  - PROD: \n    - skattemelding: https://data-collector-skatt-person-skattemelding.intern.ssb.no/tasks\n    - skatteoppgjor: https://data-collector-skatt-person-skatteoppgjor.intern.ssb.no/tasks\n\n- **skatt-naering**\n  - TEST: https://data-collector-skatt-naering.intern.test.ssb.no/tasks\n  - PROD: https://data-collector-skatt-naering.intern.ssb.no/tasks\n\n- **strukt-mva**\n  - TEST: https://data-collector-strukt-mva.intern.test.ssb.no/tasks\n  - PROD: https://data-collector-strukt-mva.intern.ssb.no/tasks  \n \n## Logger\n\nDet er mulig å sjekke logger fra google-console for [test](https://console.cloud.google.com/logs/query?hl=en&project=nais-test-19b2) og [prod](https://console.cloud.google.com/logs/query?hl=en&project=nais-prod-1338).\n\n",
    "supporting": [
      "data-collector_files"
    ],
    "filters": [],
    "includes": {}
  }
}