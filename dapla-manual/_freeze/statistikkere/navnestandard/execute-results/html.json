{
  "hash": "ba1329fdc1a1f9bed0a029a015f5a24b",
  "result": {
    "markdown": "---\ntitle: Navnestandard\nfreeze: true\nexecute:\n    echo: false\n    include: true\n\n---\n\n::: {.cell execution_count=1}\n\n::: {.cell-output .cell-output-stdout}\n```\nError: The file 'lenker.qmd' is not tracked by Git or does not exist in the repository.\n```\n:::\n:::\n\n\nData i de permanente [datatilstandene](./datatilstander.html) inndata, klargjorte data, statistikkdata og utdata skal lagres i Google Cloud Storage (GCS) bøtter og følge en definert navnestandard. Standarden gjelder for både statistikkprodukter og dataprodukter (se forklaringsboks under). Navnestandarden beskrevet i dette kapitlet er derfor gjeldende for alle data som lagres i bøtter i **standardprosjektet**, som f.eks. **produktbøtta** og **delt-bøttene**. \n\nDatatilstanden *kildedata* omfattes ikke av navnestandarden. Grunnen er at kildedata mottas av SSB i mange former/strukturer og de deles sjelden med andre team. De unike egenskapene til kildedata er også grunnen til at de ikke har samme krav til dokumentasjon i metadatasystemene heller. \n\n\n::: {.callout-note collapse=\"true\"}\n## Hva er statistikk- og dataprodukter?\n\n**Statistikkprodukter** er alle produkter som er definert i [Statistikkregisteret](https://wiki.ssb.no/display/SSBNO/4.3.1+Statistikkregisteret)^[Les mer om hvordan man henter ut informasjon fra API-et til Statistikkregisteret [i denne blogg-artikkelen.](https://ubiquitous-doodle-n15e62e.pages.github.io/posts/Statistikkregisteret/)]. Registeret inneholder alle tidligere og nåværende statstikkprodukter i SSB. Før en statistikk kan publiseres på [ssb.no](www.ssb.no) må den være registrert i Statistikkregisteret med informasjon om navn, emneområde, eierseksjon og publiseringstidspunkt. I tillegg får statistikkene tildelt et unikt kortnavn. Eksempler på kortnavn for statistikker er `kpi`, `reise` og `ftot`. Kortnavnet er en viktig del av navnestandarden for datalagring som beskrives i dette kapitlet.\n\n**Dataprodukter** er bearbeidede data som skal benyttes til andre formål enn direkte publisering på [ssb.no](www.ssb.no). Dataprodukter vil ofte være i disse kategoriene:\n\n- klargjøring av data til forskning og utlån\n- bearbeiding av data som skal inngå som en del av andre statistikker\n- data som inngår i populasjonsregistre\n\nDet eksisterer ikke et register for dataprodukter, så hvert team må lage et passende kortnavn for hvert produkt. Eksempler på dataprodukt-kortnavn er **nudb** (utdanningsdatabasen) og **fd_trygd** (forløpsdatabasen for trygdedata). Kortnavnet til dataprodukter er en viktig del av navnestandarden for datalagring, og skal alltid ha endelsen **\\_data** når den lagres i de permanente datatilstandene. F.eks. vil dataproduktet **nudb** lagres som **nudb_data** i henhold til navnestandarden.\n\n\n\n:::\n\n## Mappestruktur\n\nNavnestandarden for lagring av data innfører obligatoriske mapper som alle statistikk- og dataprodukter må følge, samt valgfrie deler hvor teamet selv kan bestemme sin mappestruktur.\n\n### Obligatoriske mapper\n\nIfølge navnestandarden skal følgende mappenivåer alltid eksistere først i en lagringsbøtte:\n\n1. Statistikkproduktets eller dataproduktets kortnavn\n2. Datatilstand\n\nAnta at det er team som heter **dapla-example** som har produserer statistikkproduktene **ledstill** og **sykefra**. I tillegg produserer de et dataprodukt som heter **ameld**. Deres mappestruktur i produktbøtta vil da se slik ut:\n\n```{.yaml filename=\"Obligatoriske mapper\"}\nssb-dapla-example-data-produkt-prod/  \n└─ ledstill/  \n   ├── inndata/\n   ├── klargjorte-data/\n   ├── statistikk/\n   └── utdata/\n└─ sykefra/  \n   ├── inndata/\n   ├── klargjorte-data/\n   ├── statistikk/\n   └── utdata/\n└─ ameld_data/  \n   ├── inndata/\n   ├── klargjorte-data/\n   ├── statistikk/\n   └── utdata/                    \n```\n\n### Valgfrie mapper\n\nDe to første mappenivåene er bestemt og obligatoriske. Teamene kan likevel opprette egendefinerte mapper der det er behov. Det kan gjøres i følgende tilfeller:\n\n- Teamet ønsker å organisere dataene i undermapper for hver datatilstand.\n- Teamet trenger å lagre temporære data.\n    - Det er anbefalt å lage en temp-mappe på første nivå etter bøttenavn, men det er også tillatt å opprette temp-mapper andre steder i mappe-hierarkiet, f.eks. `../inndata/temp/` eller `../klargjorte-data/temp/`.\n- Teamet utfører oppdrag og ønsker et eget sted å lagre data knyttet til dette. Det kan kun gjøres i en oppdrag-mappe på første nivå etter bøttenavn. \n\nUnder er et nytt eksempel i produktbøtta for team **dapla-example**, men nå har de kun statistikkproduktet **ledstill**, en **temp**-mappe og en **oppdrag**-mappe. I tillegg så ønsker de å skille mellom data som er produsert på Dapla og data som er migrert fra tidligere plattform. De gjør det ved å opprette de egendefinerte mappene **on-prem** og **dapla** for hver datatilstand.\n\n```{.yaml filename=\"Obligatoriske og egendefinerte mapper\"}\nssb-dapla-example-data-produkt-prod/  \n└─ ledstill/  \n   ├── inndata/\n       ├── on-prem/\n       ├── dapla/\n   ├── klargjorte-data/\n       ├── on-prem/\n       ├── dapla/\n   ├── statistikk/\n       ├── on-prem/\n       ├── dapla/\n   └── utdata/\n       ├── on-prem/\n       ├── dapla/\n└─ temp/\n└─ oppdrag/                     \n```\n::: {.callout-note}\n## Mappe for oppdrag\n\nNår man oppretter en mappe for oppdrag så er det viktig å kunne knytte dataene til et Websak-saksnummer. Det er derfor anbefalt at det opprettes en undermappe med saksnummeret eller at saksnummeret er med i filnavnet. \n:::\n\n\n## Filnavn\n\nFilnavn skal ha en fast struktur som inneholder: en *kort beskrivelse*, *periode*, *versjon* og *filtype*, slik som vist i @fig-filename-breakdown. \n\n\n![De ulike delene av et standardisert filnavn](../images/filename-breakdown.png){#fig-filename-breakdown width=450px}\n\nEksempelet i @fig-filename-breakdown har **varehandel** som kort beskrivelse, dataene er gyldige for **2018-Q1**, versjon er **1** og filtypen er **parquet**. I tillegg ser vi at periodeangivelse alltid skal prefixes med **p** og versjon med **v**. Elementene i filnavnet skal skilles med understrek. \n\nDet er også verdt å merke seg at mellomrom og særnorske bokstaver som **æ**, **ø** og **å** ikke forekommer i filnavnet. Følgende alfanumeriske tegn kan benyttes i fil- og mappenavn:   \n\n\n- **a**-**z** og **A**-**Z**^[Det er anbefalt at **æ**, **ø** og **å** erstattes med **ae**, **oe** og **aa**, f.eks. **naering**, **oekonomi** eller **levekaar**.].\n- **0**-**9**\n- Bruk bindestrek **-**, eller understrek **\\_**, og ikke mellomrom.\n\n@tbl-filename viser en mer inngående beskrivelse av hva som inngår i de ulike delene av et filnavn. \n\n| Element                               | Forklaring                                                                                                                                                                                                                                                                                                                                                          |\n| ------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Kort beskrivelse                      | Kort tekst som forklarer datasettets innhold, f.eks. “varehandel” eller “personinntekt”. Bruk bindestrek hvis beskrivelsen består av flere ord, f.eks. “grensehandel-imputert” eller “framskrevne-befolkningsendringer”.                                                                                                                                                                                        |\n| Periode - inneholder data f.o.m. dato | Datasettet inneholder data fra og med dato/tidspunkt. I filnavnet må perioden prefikses med “_p”, eksempel “_p2022” eller “_p2022-01-01”. Se også [gyldige formater for periode (dato/tidspunkt)](https://statistics-norway.atlassian.net/wiki/spaces/MPD/pages/2953084957/Standardformater#Dato--og-tidsformater-(ISO-8601)) |\n| Periode - inneholder data t.o.m. dato | Datasettet inneholder data til og med dato/tidspunkt. Denne brukes ved behov, eksempelvis for datasett som inneholder forløpsdata eller datasett med flere perioder/årganger.                                                                                                                                                                                       |\n| Versjon                               | Versjon av datasettet. I filnavnet må versjonsnummeret prefikses med “_v”, eksempel “v1”, “v2” eller “v3”.                                                                                                                                                                    |\n| Filtype                               | Filendelse som sier noen om filtypen, f.eks. “.json”, “.csv”, “.xml” eller “.parquet”.                                                                                                                                                                                                                                                      |\n: Autonomitet og tilganger i IaC-repo {#tbl-filename .striped}\n\n### Eksempler på gyldige filnavn\n\nUnder finner du et utvalg eksempler på gyldige filnavn for ulike tidsspenn.\n\n| Tidsspenn                | Eksempel på gyldige filnavn             |\n|--------------------------|-----------------------------------------|\n| Én årgang med data | *flygende-objekter_p2019_v1.parquet* |\n| To årganger med data | *ufo-observasjoner_p2019_p2020_v1.parquet* |\n| Fra 2019 til 2050 | *framskrevne-befolkningsendringer_p2019_p2050_v1.parquet* |\n| Fra 01.01.2022 til 31.12.2022 | *sykepenger_p2022-01-01_p2022-12-31_v1.parquet* |\n| Tverrsnittsdata (status) per 01.10.2022 | *utanningsnivaa_p2022-10-01_v1.parquet* |\n| Oktober, november og desember 2022 | *grensehandel-imputert_p2022-10_p2022-12_v1.parquet* |\n| Uke-nummer 1 | *omsetning_p2020-W01_v1.parquet* |\n| Uke-nummer 15 | *omsetning_p2020-W15_v1.parquet* |\n| Første bimester i 2022 | *skipsanloep_p2022-B1_v1.parquet* |\n| Første kvartal  i 2018 (quarter) | *pensjon_p2018-Q1_v1.parquet* |\n| Første tertial i 2022 | *nybilreg_p2022-T1_v1.parquet* |\n| Første halvår i 2022 | *personinntekt_p2022-H1_v1.parquet* |\n| Kvartalene 1, 2, 3 og 4 i 2018 | *varehandel_p2018-Q1_p2018-Q4_v1.parquet* |\n| Dato 31.12.2024 og tid 23:59:30.000 | *skjema_p2024-12-31T23-59-30.000_v1.parquet* |\n\n\n## Partisjonerte data\n\nTeam som partisjonerer sine filer ved lagring skal fortsatt følge navnestandarden. Det som endrer seg er at **filtype** ikke blir en del av filnavnet, men heller kommer inn under partisjoneringen. Anta at team **dapla-example** partisjonerer et datasett i datatilstand inndata som heter **skjema_p2018_p2020_v1**. Anta også at de partisjonerer dataene med hensyn på kolonnen **aar**. Da vil de i henhold til navnestandarden opprette denne strukturen:\n\n```{.yaml filename=\"Mappestruktur partisjonert data\"}\nssb-dapla-example-data-produkt-prod/  \n└─ ledstill/  \n   ├── inndata/\n        └── skjema_p2018_p2020_v1\n            └── aar=2018\n                └── data.parquet\n            └── aar=2019\n                └── data.parquet\n            └── aar=2020\n                └── data.parquet         \n   ├── klargjorte-data/\n   ├── statistikk/\n   └── utdata/                 \n```\n\n### Eksempel: Produktbøtte for team dapla-example\n\nAnta at det er team som heter **dapla-example** med statistikkproduktene **ledstill** og **sykefra**, og de har et dataprodukt med kortnavnet **ameld**. Teamet har følgende mappestruktur i produktbøtta:\n\n```{.yaml filename=\"Produktbøtta: ledstill, sykefra og ameld\"}\nssb-dapla-example-data-produkt-prod/\n└─ ledstill/  \n    ├── inndata/\n    │   ├── skjema_p2024-Q1_v1.parquet\n    │   ├── skjema_p2024-Q2_v1.parquet\n    │   └── skjema_p2024-Q2_v2.parquet\n    ├── klargjorte-data/\n    │   ├── editert_p2024-Q1_v1.parquet\n    │   └── editert_p2024-Q2_v1.parquet\n    ├── statistikk/\n    │   ├── aggregert_p2024-Q1_v1.parquet\n    │   └── aggregert_p2024-Q2_v1.parquet        \n    └── utdata/\n    │   ├── statbank_p2024-Q1_v1.parquet\n    │   └── statbank_p2024-Q2_v1.parquet   \n    │\n└─ sykefra/  \n    ├── inndata/\n    │   ├── egenmeldt_p2024-Q1_v1.parquet\n    │   ├── egenmeldt_p2024-Q2_v1.parquet\n    │   ├── legemeldt_p2024-Q1_v1.parquet\n    │   └── legemeldt_p2024-Q2_v1.parquet\n    ├── klargjorte-data/\n    │   ├── sykefravaer_p2024-Q1_v1.parquet\n    │   └── sykefravaer_p2024-Q2_v1.parquet\n    ├── statistikk/\n    │   ├── aggregert_p2024-Q1_v1.parquet\n    │   └── aggregert_p2024-Q2_v1.parquet\n    └── utdata/\n    │   ├── statbank_p2024-Q1_v1.parquet\n    │   └── statbank_p2024-Q2_v1.parquet\n    │\n└─ ameld_data/  \n    ├── inndata/\n    │   ├── ameldingen_p2024-11_v1.parquet\n    │   └── ameldingen_p2024-12_v1.parquet\n    └── klargjorte-data/\n    │   ├── ameldingen_p2024-11_v1.parquet\n    │   └── ameldingen_p2024-12_v1.parquet\n```\n\n## Versjonering av datasett\n\nVersjonering er obligatorisk når man jobber med data på dapla. Hovedgrunnen til at vi versjonerer er for å dekke kravet om uforanderlighet og etterprøvbarehet: at data-konsumenter (menneske eller maskin) skal ha kontroll på endringer. Derfor skal et datasett som er brukt i statistikkproduksjon aldri slettes - det skal opprettes en ny versjon av datasettet. Les mer om prinsippet om uforanderlighet av data på [confluence-siden til IT-Arkitektur](https://statistics-norway.atlassian.net/wiki/spaces/Arkitektur/pages/2839707937/Prinsipp+1+Uforanderlighet+av+data).\n\nKort fortalt innebærer versjonering av data at datasettene har versjonsnummer før filendelsen.\nFor eksempel: *framskrevne-befolkningsendringer_p2019_p2050**\\_v1**.parquet*\n\n::: {.callout-note}\n## Unntak til versjonering: nyeste versjon og temporære data\nNyeste versjon kan lagres uten versjonsnummer. Dette er for at man enkelt skal kunne lese inn siste versjon av et datasett (ved å utelate versjonssuffiks). I tilegg trenger man ikke versjonere temporære data. \n:::\n\n### Når skal man lagre ny versjon?\n\nFølgende hendelser skaper ny versjon av et datasett:\n\n  * Reberegninger av data med nye metoder.\n\n  * Korrigeringer av verdier.\n\n  * Oservasjoner legges til eller fjernes.\n\n  * Oppdatert eller erstattet kodeverk.\n\n  * Variabler fjernes eller legges til.\n\n    * Hvis det gjøres vesentlige endringer (mange variabler) så bør det vurderes om dette er et helt nytt datasett.\n\n  * Andre strukturendringer, f.eks. bytte av datatyper eller formater.\n  \nMed andre ord: enhver endring skaper en ny versjon!\n\n###  Versjonering i praksis\n\nFor hver versjon som oppstår av datasettet opprettes det en ny fysisk fil hvor\nversjonsnummeret økes med en. Alle gamle versjoner av et datasett skal også\neksistere i mappen.\n\nEtterhvert som man får flere versjoner av et datasett kan det se slik ut:\n\n```{.yaml filename=\"Mappe med flere versjoner av et datasett\"}\nssb-prod-team-personstatistikk-data-produkt-prod/  \n└── befolkningsframskrivinger/  \n    └── klargjorte-data/  \n        ├── framskrevne-befolkningsendringer_p2019_p2050.parquet  \n        ├── framskrevne-befolkningsendringer_p2019_p2050_v1.parquet  \n        ├── framskrevne-befolkningsendringer_p2019_p2050_v2.parquet  \n        └── framskrevne-befolkningsendringer_p2019_p2050_v3.parquet\n```\n\nEksempelet over viser at siste versjon av en fil kan lagres med og uten versjonsnummer for å gjøre det lettere å lese inn nyeste versjon.\n\n#### Eksempelkode med pakken ssb-fagfunksjoner\n\n```python{.yaml filename=\"Python kode fra SSB-fagfunksjoner for finne neste filversjon\"}\n# importer funksjonen next_version_path() fra ssb-fagfunksjoner\nfrom fagfunksjoner import next_version_path\n\nfilsti = 'gs://ssb-prod-team-personstatistikk-data-produkt-prod/befolkningsframskrivninger/klargjorte-data/framskrevne-befolkningsendringer_p2019_p2050.parquet'\n\nny_filsti = next_version_path(filsti)\n\nprint(ny_filsti)\n# vil returnere:\n# 'gs://ssb-prod-team-personstatistikk-data-produkt-prod/befolkningsframskrivninger/klargjorte-data/framskrevne-befolkningsendringer_p2019_p2050_v4.parquet'\n\n```\nssb-fagfunksjoner har også følgende funksjoner for å gjøre versjonering lettere:\n\n* `get_fileversions()` # Retrieves a list of file versions matching a specified pattern.\n* `latest_version_number()` # Function for finding latest version in use for a file.\n* `latest_version_path()` # Finds the path to the latest version of a specified file.\n\n::: {.callout-important}\n## Permanente data skal ikke endres eller slettes \n\n**Tidligere delte/publiserte data skal ikke slettes eller overskrives!**  \n*Det må derfor lagres fysiske filer for hver versjon av datasettet. Dette er viktig for at SSB skal oppfylle krav om etterprøvbarhet av statistikkene.*\n:::\n\n#### Versjon 0: Deling av data som ikke har oppnådd stabil tilstand \n\nHvis det er behov for å dele data som\nfortsatt er under innsamling eller pågående klargjøring gjøres dette ved å\nbruke *versjonsnummer 0* i filnavnet. \n\nDette versjonsnummeret skal kun brukes\nmidlertidig fram til datasettet oppnår stabil tilstand. Ved stabil tilstand\nbyttes versjonsnummer for datasettet til 1 eller høyere.\n\n",
    "supporting": [
      "navnestandard_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}