{
  "hash": "7c2b4f2ad20d2bef9730c810f89f8683",
  "result": {
    "markdown": "---\ntitle: Jupyter\nfreeze: true\nexecute:\n    echo: false\n    include: true\n\n---\n\n::: {.cell execution_count=1}\n\n::: {.cell-output .cell-output-stdout}\n```\nSist endret: 2024-08-25 av Øyvind Bruer-Skarsbø\n```\n:::\n:::\n\n\n![](../images/dapla-lab-jupyter-service.png){style=\"max-width: 350%; float: right;\" fig-alt=\"Jupyter Service\"}\n\n**Jupyter** er en tjeneste på [Dapla Lab](./dapla-lab.html) som lar brukerne kode i [Jupyterlab](https://docs.jupyter.org/en/latest/). Tjenesten kommer med R og Python og noen vanlige Jupyterlab-extensions ferdig installert. Målgruppen for tjenesten er brukere som skal skrive produksjonskode i Jupyterlab. \n\nSiden tjenesten er ment for produksjonskode så er det veldig få R- og Python-pakker som er forhåndsinstallert. Antagelsen er at brukeren/teamet heller bør installere de pakkene de selv trenger, framfor at det ligger ferdiginstallerte pakker som skal dekke behovet til alle brukere/team i SSB. Det reduserer kompleksitet i tjenesten og dermed sannsynligheten for feilsituasjoner. \n\nFor uerfarne brukere finnes det en egen tjeneste som heter [Jupyter-playground](./jupyter-playground.html). Her er mange av de vanlige R- og Python-pakkene installert og det er opprettet en ferdig kernel som lar brukerne komme i gang fort med koding. Denne tjenesten er ikke tenkt for bruk i produksjonskode. \n\n## Forberedelser\n\nFør man starter **Jupyter-tjenesten** bør man ha lest [kapitlet om Dapla Lab](./dapla-lab.html) og satt opp Git- og GitHub-konfigurasjonen under **Min konto**. Deretter gjør du følgende:\n\n1. Logg deg inn på [Dapla Lab](https://lab.dapla.ssb.no/)\n2. Under **Tjenestekatalog** trykker du på **Start**-knappen for **Jupyter**\n3. Gi tjenesten et navn\n4. Åpne **Jupyter konfigurasjoner**\n\n## Konfigurasjon\n\nFør man åpner en tjeneste kan man konfigurere hvor mye ressurser man ønsker, hvilket team man skal representere, om et GitHub-repo skal klones ved oppstart, og mange andre ting. Valgene man gjør kan også lagres slik at man å slipper å gjøre samme jobb senere. @fig-dapla-lab-tjenestekonf-detail viser Tjeneste-fanen i konfigurasjonen for Jupyter.\n\n![Detaljert tjenestekonfigurasjon i Dapla Lab](../images/dapla-lab-tjenestekonf-detail.png){fig-alt=\"Viser tjenestekonfigurasjonen i Dapla Lab.\" #fig-dapla-lab-tjenestekonf-detail}\n\n### Tjeneste\n\nUnder fanen **Tjeneste** kan man velge hvilke **Versjon** av Jupyter som skal startes^[Med versjon menes her hvilken Docker-container som skal bygges. Men i konfigurasjonen har vi forenklet valget ved å kun vise hvilke R- og Python-versjoner som skal gjelde]. Siden Jupyter-tjenesten kommer installert med både R- og Python så er det her man velger hvilke versjoner av disse man ønsker. Man kan velge mellom alle tidligere tilbudte kombinasjoner av R og Python. \n\nI @fig-dapla-lab-tjenestekonf-detail ser vi av navnet `r4.4.0-py311-v55-2024.10.31` at tjenesten som default vil startes versjon 4.4.0 av R og 3.11 for Python. Etter hvert som nye versjoner av R og Python kommer kan disse tilgjengeliggjøres i tjenesten, men brukeren kan velge å starte en eldre versjon av tjenesten.\n\n### Dapla\n\nUnder **Dapla**-fanen kan man velge **Aktiver** for å få tilgang til data fra bøtter i tjenesten. I tillegg må man da velge hvilket team og tilgangsgruppe man skal representere.\n\nAktiveres **Bøtter som filsystem** så blir bøttene til teamet tilgjengeliggjort som et vanlig filsystem under filstien `/buckets/`.\n\nUnder **Team og tilgangsgruppe** kan man velge hvilket team og tilgangsgruppe man skal representere i tjenesten. Man gjør dette ved å velge navnet på tilgangsgruppen, og denne er alltid på formen `<teamnavn>-<tilgangsgruppe>`. @fig-dapla-lab-konf-buckets viser at brukeren har valgt tilgangsgruppen *dapla-felles-developers*, dvs. at de representerer tilgangsgruppen *developers* for teamet *dapla-felles*. \n\n![Detaljert tjenestekonfigurasjon for bøttetilgang i Dapla Lab](../images/dapla-lab-konf-buckets.png){fig-alt=\"Viser tjenestekonfigurasjonen i Dapla Lab.\" #fig-dapla-lab-konf-buckets}\n\nUnder **Team og tilgangsgruppe** kan brukeren også velge å representere tilgangsgruppen *data-admins* for et team. I de tilfellene er det et krav om brukeren oppgir en skriftlig begrunnelse for hvorfor tilgangen er nødvendig. I tillegg må kan de maksimalt aktivere tilgangen i 8 timer. \n\n@fig-dapla-lab-konf-buckets-data-admins viser en bruker som aktiverer sin *data-admins* tilgang for team *dapla-felles*. Hvis brukeren ikke oppgir en begrunnelse vil de få en feilmelding ved oppstart av tjenesten.  \n\n![Aktivere tilgang til kildedata for data-admins.](../images/dapla-lab-konf-buckets-data-admin.png){fig-alt=\"Viser tjenestekonfigurasjonen i Dapla Lab.\" #fig-dapla-lab-konf-buckets-data-admins}\n\n### Ressurser\n\nUnder fanen **Ressurser** kan man velge hvor mye CPU og RAM man ønsker i tjenesten, slik som vist i @fig-dapla-lab-resources. Velg så lite trengs for å gjøre jobben du skal gjøre. \n\n![Konfigurasjon av ressurser for Jupyter-tjenesten i Dapla Lab](../images/dapla-lab-resources.png){fig-alt=\"Viser Resources-fanen i Jupyter-konfigurasjonen i Dapla Lab.\" #fig-dapla-lab-resources}\n\n### Diskplass\n\nSom default får alle som starter en instans av Jupyter-tjenesten en lokal disk på **10GB** inne i tjenesten. Under *Diskplass*-fanen kan man velge å øke størrelsen på disken eller ikke noe disk i det hele tatt. Siden lokal disk i tjenesten hovedsakelig skal benyttes til å lagre en lokal kopi av koden som lagres på GitHub mens man gjør endringer, så bør ikke størrelsen på disken være større enn nødvendig. @fig-dapla-lab-persistence viser valgene som kan gjøres under Diskplass-fanen. \n\n![Konfigurasjon av lokal disk for Jupyter-tjenesten i Dapla Lab](../images/dapla-lab-persistence.png){fig-alt=\"Viser Persitence-fanen i Jupyter-konfigurasjonen i Dapla Lab.\" #fig-dapla-lab-persistence}\n\n### Git\n\nUnder fanen **Git** kan man konfigurere Git og GitHub slik at det blir lettere å jobbe med inne i tjenesten. Som standard arves informasjonen som er lagret under [*Min konto*-*Git* i Dapla Lab](./dapla-lab.html#git). Informasjonen under tjenestekonfigurasjonen blir tilgjengeliggjort som miljøvariabler i tjenesten. Informasjonen blir også lagt i `$HOME/.netrc` slik at man kan benytte ikke trenger å gjøre noe mer for å jobbe mot GitHub fra tjenesten.  \n\n![Konfigurasjon av Git for Jupyter-tjenesten i Dapla Lab](../images/dapla-lab-konf-git.png){fig-alt=\"Viser Persitence-fanen i Jupyter-konfigurasjonen i Dapla Lab.\" #fig-dapla-lab-konf-git}\n\n@fig-dapla-lab-konf-git viser at brukeren som standard får aktivert **Aktiver Git**. Dette innebærer at Git-brukernavn, Git e-post og GitHub-token arves fra brukerkonfigurasjonen. I tillegg så opprettes SSBs standard Git-konfigurasjon i `~/.gitconfig`. \n\n## Datatilgang\n\nHvis man har valgt å tilgjengeliggjøre data fra et team sitt bøtter i tjenesten, så kan man inspisere dataene fra en terminal inne i tjenesten: \n\n1. Åpne en instans av Jupyter med data fra bøtter \n2. Åpne en terminal inne i Jupyter\n3. Gå til mappen med bøttene ved å kjøre dette fra terminalen `cd /buckets`\n3. Kjør `ls -ahl` i teminalen for å se på hvilke bøtter som er montert.\n\n## Installere pakker\n\nSiden det nesten ikke er installert noen pakker i tjenesten så kan brukeren opprette et [ssb-project](jobbe-med-kode.qmd#ssb-project) og installere pakker som vanlig. \n\nFor å [bygge et eksisterende ssb-project](./jobbe-med-kode.qmd#bygg-eksisterende-ssb-project) så kan brukeren også bruke ssb-project.\n\nFor å installere R-pakker følger man [beskrivelsen for renv](./jobbe-med-kode.qmd#r-og-renv).\n\n## Slette tjenesten\n\nFor å slette tjenesten kan man trykke på Slette-knappen i Dapla Lab under **Mine tjenester**. Når man sletter en tjeneste så sletter man hele disken inne i tjenesten og frigjør alle ressurser som er reservert. Vi anbefaler at man avslutter heller pauser tjenester som ikke benyttes. \n\n## Pause tjenesten\n\nMan kan pause tjenesten ved å trykke på Pause-knappen i Dapla Lab under **Mine tjenester**. Når man pauser så slettes alt påden lokale disken som ikke er lagret under `$HOME/work`. Vi anbefaler at man avslutter heller pauser tjenester som ikke benyttes.\n\n## Monitorering\n\n:::: {.columns}\n\n::: {.column width=\"70%\"}\nMan kan moniterere en instans av Jupyter ved å trykke på Jupyter-teksten under Mine tjenester i Dapla Lab, slik som vist i @fig-dapla-lab-monitoring.\n\nDenne funksjonaliteten er under arbeid og mer informasjon kommer snart. \n:::\n\n::: {.column width=\"5%\"}\n<!-- empty column to create gap -->\n:::\n\n::: {.column width=\"25%\"}\n![Monitorering av Jupyter-tjenesten i Dapla Lab](../images/dapla-lab-monitoring.png){fig-alt=\"Viser Persitence-fanen i Jupyter-konfigurasjonen i Dapla Lab.\" #fig-dapla-lab-monitoring}\n:::\n\n::::\n\n",
    "supporting": [
      "jupyter_files"
    ],
    "filters": [],
    "includes": {}
  }
}